on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: "Test and Build Code"

jobs:
  setup:
    name: Setup Environment
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

  test:
    name: Run Tests
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests and generate report
        run: |
          mkdir -p test-results
          flutter test --machine > test-results/results.json
          cat test-results/results.json | flutter pub run junitreport:tojunit > test-results/test-report.xml

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: Flutter-Test-Report
          path: test-results/test-report.xml

  coverage:
    name: Generate Coverage Report
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Install LCOV
        run: sudo apt-get install lcov

      - name: Generate HTML coverage report
        run: |
          mkdir -p coverage_report
          genhtml coverage/lcov.info --output-directory coverage_report

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Flutter-Coverage-Report
          path: coverage_report/

  build_apk:
    name: Build Debug APK
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Debug APK
        run: flutter build apk --split-per-abi

      - name: Upload APK Build
        uses: actions/upload-artifact@v4
        with:
          name: Debug-APK
          path: build/app/outputs/flutter-apk/

  build_ios_debug:
    name: Build iOS Debug
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CocoaPods
        run: |
          cd ios
          pod install
          cd ..

      - name: Build iOS Debug
        run: flutter build ios --debug

      - name: Archive iOS Debug Build
        run: |
          mkdir -p build/ios_debug
          cp -r build/ios/iphoneos build/ios_debug/

      - name: Upload iOS Debug Build
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Debug-Build
          path: build/ios_debug/
